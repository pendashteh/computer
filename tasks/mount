#!/usr/bin/env bash

readonly COMPUTER_MOUNT="mount"
readonly COMPUTER_UNMOUNT="unmount"

function run() {
  [ "$1" = "--help" ] && _help && return

  local method=$COMPUTER_MOUNT
  [ "$1" = "--unmount" ] && method=$COMPUTER_UNMOUNT

  local computer_name=$(app_computer_name)
  ! app_validate_computer_exists $computer_name && echo 'Computer '$computer_name' does not exist.' && return


  local host_dir=${1:-$(pwd)}
  local computer_dir=${2:-/root/dev}

  local device_name=$(echo $computer_dir | sed 's#/#_#g')

  run_setup
  app_exec lxc config device remove $computer_name $device_name
  local res=$?

  if [ "$method" = "$COMPUTER_UNMOUNT" ]; then
    echo "Attempted to unmount ${device_name} from ${computer_name}"
    test $res -eq 0 && echo "Successful." || echo "Failed."
  else
    app_exec lxc config device add $computer_name $device_name disk source=$host_dir path=$computer_dir
    local res=$?
    echo "Attempted to mount $host_dir on the host machine to $computer_dir on $computer_name as $device_name"
    test $res -eq 0 && echo "Successful. Try '$ computer @$computer_name exec ls $computer_dir'" || echo 'Failed.'
  fi

}

function run_setup {
  if [ $(lxc config set $computer_name raw.idmap) ]; then
    echo -en "uid $(id -u) 1000\ngid $(id -g) 1000" | app_exec lxc config set $computer_name raw.idmap -
    app_exec lxc restart $computer_name
  fi
}

function run_help {
  echo '
  Usage:
  $ computer --help
  $ computer @id mount [--unmount | /path/to/host/source | $(pwd)] [[/home/ubuntu/]path/to/destination | dev ]
  $ computer @id mount /local/path /box/path
  $ computer @id mount --unmount /box/path

  Example:
  $ computer @ubuntu mount [$(pwd)] [dev]
  '
}
